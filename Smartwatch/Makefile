PROJ_NAME=main

SRCS = src/main.c \
       src/system_stm32l1xx.c \
       src/startup_stm32l1xx_xl.s \
	   src/battery.c \
	   src/bluetooth.c \
	   src/display.c \
       src/picture.c \
       src/icons.c \
       ../../Libraries/STM32L1xx_StdPeriph_Driver/src/stm32l1xx_spi.c \
	   ../../Libraries/STM32L1xx_StdPeriph_Driver/src/stm32l1xx_gpio.c \
	   ../../Libraries/STM32L1xx_StdPeriph_Driver/src/stm32l1xx_rcc.c \


CC=arm-none-eabi-gcc
OBJCOPY=arm-none-eabi-objcopy

OBJDIR = build

CFLAGS  = -g -Wall -Wno-missing-braces -std=c99
CFLAGS += -mthumb -mcpu=cortex-m3
CFLAGS += -mfloat-abi=soft
CFLAGS += -specs=nosys.specs
# TODO: hard float was causing an exception; see what's up.
LDFLAGS = -Wl,-Map,$(OBJDIR)/$(PROJ_NAME).map -g -T./src/STM32L152RE_FLASH.ld

CFLAGS += -I./inc -I../../Libraries/CMSIS/Device/ST/STM32L1xx/Include -I../../Libraries/CMSIS/Include -I../../Libraries/STM32L1xx_StdPeriph_Driver/inc/ -DSTM32L1XX_XL -DUSE_STDPERIPH_DRIVER

OBJS := $(SRCS:.c=.o)
OBJS := $(OBJS:.s=.o)
OBJS := $(addprefix $(OBJDIR)/,$(OBJS))


all: $(OBJDIR)/$(PROJ_NAME).elf $(OBJDIR)/$(PROJ_NAME).hex $(OBJDIR)/$(PROJ_NAME).bin

$(OBJDIR)/%.elf: $(OBJS)
	$(CC) $(CFLAGS) -o $@ $^ $(LDFLAGS)

%.hex: %.elf
	$(OBJCOPY) -O ihex $^ $@

%.bin: %.elf
	$(OBJCOPY) -O binary $^ $@

$(OBJDIR)/%.o: %.c
	mkdir -p $(dir $@)
	$(CC) -c $(CFLAGS) -o $@ $^

$(OBJDIR)/%.o: %.s
	$(CC) -c $(CFLAGS) -o $@ $^

$(OBJDIR):
	mkdir -p $@

clean:
	rm -f $(OBJDIR)/$(PROJ_NAME).elf
	rm -f $(OBJDIR)/$(PROJ_NAME).hex
	rm -f $(OBJDIR)/$(PROJ_NAME).bin
	rm -f $(OBJDIR)/$(PROJ_NAME).map
	find $(OBJDIR) -type f -name '*.o' -print0 | xargs -0 -r rm


program: $(OBJDIR)/$(PROJ_NAME).elf
	openocd-0.6.1 -f program.cfg


# Dependdencies
$(OBJDIR)/$(PROJ_NAME).elf: $(OBJS) | $(OBJDIR)
